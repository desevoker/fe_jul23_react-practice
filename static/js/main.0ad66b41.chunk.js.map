{"version":3,"sources":["api/users.js","api/categories.js","api/products.js","api/apiService.js","App.jsx","index.jsx"],"names":["id","name","sex","title","icon","ownerId","categoryId","getProducts","selectedUserId","selectedCategoriesIds","query","products","productsFromServer","map","product","userId","productCategory","categoriesFromServer","find","category","categoryOwner","usersFromServer","user","owner","filter","length","includes","lcProductName","toLowerCase","normalizedQuery","trim","App","useState","setSelectedUserId","setSelectedCategoriesIds","setQuery","users","categories","className","href","cn","onClick","type","placeholder","value","onChange","e","target","selectedCateegoryId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ad66b41.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import usersFromServer from './users';\nimport categoriesFromServer from './categories';\nimport productsFromServer from './products';\n\nexport function getProducts({\n  selectedUserId,\n  selectedCategoriesIds,\n  query,\n}) {\n  let products = productsFromServer.map((product) => {\n    const productCategory = getCategoryById(product.categoryId);\n    const categoryOwner = getUserById(productCategory.ownerId);\n\n    const newProduct = {\n      ...product,\n      category: {\n        ...productCategory,\n        owner: {\n          ...categoryOwner,\n        },\n      },\n    };\n\n    return newProduct;\n  });\n\n  if (selectedUserId >= 0) {\n    products = products.filter(\n      product => product.category.owner.id === selectedUserId,\n    );\n  }\n\n  if (selectedCategoriesIds?.length) {\n    products = products.filter(\n      product => selectedCategoriesIds.includes(product.category.id),\n    );\n  }\n\n  if (query) {\n    products = products.filter((product) => {\n      const lcProductName = product.name.toLowerCase();\n      const normalizedQuery = query.trim().toLowerCase();\n\n      return lcProductName.includes(normalizedQuery);\n    });\n  }\n\n  return products;\n}\n\nexport function getUsers() {\n  return usersFromServer;\n}\n\nexport function getCategories() {\n  return categoriesFromServer;\n}\n\nfunction getCategoryById(categoryId) {\n  return categoriesFromServer.find(\n    category => category.id === categoryId,\n  );\n}\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport cn from 'classnames';\nimport { getCategories, getProducts, getUsers } from './api/apiService';\n\nexport const App = () => {\n  const [selectedUserId, setSelectedUserId] = useState(-1);\n  const [selectedCategoriesIds, setSelectedCategoriesIds] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const users = getUsers();\n  const categories = getCategories();\n  const products = getProducts({\n    selectedUserId,\n    selectedCategoriesIds,\n    query,\n  });\n\n  const handleCategoryOnclick = (categoryId) => {\n    if (selectedCategoriesIds.includes(categoryId)) {\n      setSelectedCategoriesIds(\n        selectedCategoriesIds.filter(\n          selectedCateegoryId => selectedCateegoryId !== categoryId,\n        ),\n      );\n    } else {\n      setSelectedCategoriesIds([...selectedCategoriesIds, categoryId]);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={cn({\n                  'is-active': selectedUserId === -1,\n                })}\n                onClick={() => setSelectedUserId(-1)}\n              >\n                All\n              </a>\n\n              {users.map(user => (\n                <a\n                  key={user.id}\n                  className={cn({\n                    'is-active': selectedUserId === user.id,\n                  })}\n                  onClick={() => setSelectedUserId(user.id)}\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={e => setQuery(e.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {!!query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={cn('button', 'is-success', 'mr-6', {\n                  'is-outlined': !!selectedCategoriesIds.length,\n                })}\n                onClick={() => setSelectedCategoriesIds([])}\n              >\n                All\n              </a>\n\n              {categories.map(category => (\n                <a\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={cn('button', 'mr-2', 'my-1', {\n                    'is-info': selectedCategoriesIds.includes(category.id),\n                  })}\n                  onClick={() => handleCategoryOnclick(category.id)}\n                  href=\"#/\"\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => {\n                  setSelectedUserId(-1);\n                  setQuery('');\n                  setSelectedCategoriesIds([]);\n                }}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {products.length ? (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {products.map(product => (\n                  <tr key={product.id} data-cy=\"Product\">\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      {product.id}\n                    </td>\n\n                    <td data-cy=\"ProductName\">\n                      {product.name}\n                    </td>\n\n                    <td data-cy=\"ProductCategory\">\n                      {`${product.category.icon} - ${product.category.title}`}\n                    </td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className={cn({\n                        'has-text-link': product.category.owner.sex === 'm',\n                        'has-text-danger': product.category.owner.sex === 'f',\n                      })}\n                    >\n                      {product.category.owner.name}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}